load_file("nrngui.hoc") 

create soma
access soma

gNaBar=0.12
gKBar=0.04
RM = 35000
gleak = 1/RM

//Soma dimensions
soma nseg = 1
soma diam = 20
soma L = 20
soma Ra = 123.0
soma Rm = RM



// Insert channels
soma insert nas
soma insert kdr
gbar_nas=gNaBar
gkdrbar_kdr=gKBar


v_init = -65
stamp = 0.1
Duration = 0.1

objectvar stim
soma stim = new IClamp(0.5)

stim.del = 100
stim.dur = Duration
stim.amp = stamp

tstop = 300


// Panel buttons and procedures:
proc update_IClamp() {
	stim.amp=stamp
}

proc update_gNaBar() {
	gbar_nas=gNaBar

}

proc update_gKBar() {
	gkdrbar_kdr=gKBar

}


objref SpikeCounter, nil, spiketimes, fr, Istim
SpikeCounter = new NetCon(&soma.v(0.5), nil)
SpikeCounter.threshold = -15  //mV
spiketimes = new Vector()
fr = new Vector()
Istim = new Vector()

objref fi
fi = new File()
fi.wopen("FI.dat")

// Define:
proc get_firingRate() {
    SpikeCounter.record(spiketimes)
    numspikes = spiketimes.size()
    FR = numspikes/stim.dur
    fi.aopen("FI.dat")
    fi.printf("%f\n",FR)
    fr.append(FR)

}

currstep = 0.05 //nA
numamps = 50

proc get_fiVsAmp() {
/// For getting FI curve vs Current amplitude:
    
    for (k = currstep; k<=numamps*currstep; k+=currstep) {


        // Run simulation
	print k
	finitialize(v_init)
	fcurrent()
	soma stim.amp = k
	fi.printf("%f\t", k)
	run()
        // Get num of spikes
        get_firingRate()
	i+=1
    }
}

get_fiVsAmp()

xpanel("Parameters")
xvalue("gNaBar","gNaBar",1,"update_gNaBar()",1,1)
xvalue("gKBar","gKBar",1,"update_gKBar()",1,1)
xvalue("Clamp Amplitude","stamp",1,"update_Iclamp()",1,1)
xpanel()

newPlotV()



//for(k=1; k<=Istim.size(); k+=1){
//	fi.printf("%f\t%f\n", Istim.x[k],fr.x[k])
//}


//fi.printf("\n")
//fr.printf(fi)

fi.close()

nrncontrolmenu()
